name: Scrape YouTube Captions

on:
  schedule:
    - cron: '* * * * *'  # Run every minute
  workflow_dispatch:  # Allow manual trigger
  repository_dispatch:
    types: [scrape_urls]  # Webhook API trigger

permissions:
  contents: write
  issues: write

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install

      - name: Process webhook URLs
        if: github.event_name == 'repository_dispatch'
        run: |
          echo "Processing webhook URLs..."
          echo '${{ toJson(github.event.client_payload.urls) }}' > webhook_urls.json
          if [ -f webhook_urls.json ] && [ -s webhook_urls.json ] && [ "$(cat webhook_urls.json)" != "null" ]; then
            echo "$(cat webhook_urls.json | jq -r '.[]')" > urls.txt
            echo "URLs added to processing queue:"
            cat urls.txt
          else
            echo "No URLs found in webhook payload"
          fi

      - name: Run scraper
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: node scraper.js


      - name: Check for changes
        id: verify
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push if changes
        if: steps.verify.outputs.changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/
          git commit -m "Update YouTube captions [skip ci]"
          git push